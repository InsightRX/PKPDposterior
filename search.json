[{"path":"https://insightrx.github.io/PKPDposterior/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"BSD-3 license","title":"BSD-3 license","text":"Copyright (c) 2022, PKPDposterior developers Assignees rights reserved. Redistribution use source binary forms, without modification, permitted provided following conditions met: Redistributions source code must retain copyright notice, list conditions following disclaimer. Redistributions binary form must reproduce copyright notice, list conditions following disclaimer documentation /materials provided distribution. Neither name copyright holder names contributors may used endorse promote products derived software without specific prior written permission. SOFTWARE PROVIDED COPYRIGHT HOLDERS CONTRIBUTORS “” EXPRESS IMPLIED WARRANTIES, INCLUDING, LIMITED , IMPLIED WARRANTIES MERCHANTABILITY FITNESS PARTICULAR PURPOSE DISCLAIMED. EVENT SHALL COPYRIGHT HOLDER CONTRIBUTORS LIABLE DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, CONSEQUENTIAL DAMAGES (INCLUDING, LIMITED , PROCUREMENT SUBSTITUTE GOODS SERVICES; LOSS USE, DATA, PROFITS; BUSINESS INTERRUPTION) HOWEVER CAUSED THEORY LIABILITY, WHETHER CONTRACT, STRICT LIABILITY, TORT (INCLUDING NEGLIGENCE OTHERWISE) ARISING WAY USE SOFTWARE, EVEN ADVISED POSSIBILITY DAMAGE.","code":""},{"path":"https://insightrx.github.io/PKPDposterior/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Ron Keizer. Author, maintainer. Jasmine Hughes. Author. Dominic Tong. Author. Kara Woo. Author. InsightRX. Copyright holder, funder.","code":""},{"path":"https://insightrx.github.io/PKPDposterior/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Keizer R, Hughes J, Tong D, Woo K (2022). PKPDposterior: MCMC-Based MIPD. R package version 0.0.0.9000, https://insightrx.github.io/PKPDposterior/.","code":"@Manual{,   title = {PKPDposterior: MCMC-Based MIPD},   author = {Ron Keizer and Jasmine Hughes and Dominic Tong and Kara Woo},   year = {2022},   note = {R package version 0.0.0.9000},   url = {https://insightrx.github.io/PKPDposterior/}, }"},{"path":[]},{"path":"https://insightrx.github.io/PKPDposterior/index.html","id":"introduction","dir":"","previous_headings":"","what":"Introduction","title":"MCMC-Based MIPD","text":"software package provides convenience functions around Stan (CmdStanR), Torsten, PKPDsim. goal package make easier full-Bayesian inference context model-informed precision dosing. software intended use education research, intended clinical use. design, package include functionality directly provides dosing advice.","code":""},{"path":"https://insightrx.github.io/PKPDposterior/index.html","id":"installation-and-getting-started","dir":"","previous_headings":"","what":"Installation and getting started","title":"MCMC-Based MIPD","text":"Install latest version PKPDposterior using remotes devtools: PKPDposterior depends Torsten Stan. don’t already software working, follow instructions installing Torsten. , add file path Stan installation location environment variables. avoid running command every time restart R session, consider adding environment variable .Rprofile configuration file. Prepare R session use Stan running following line code: Great! Now ready start modeling!","code":"remotes::install_github(\"InsightRX/PKPDposterior\") devtools::install_github(\"InsightRX/PKPDposterior\") Sys.setenv(STAN_PATH = \"path/to/stan\") cmdstanr::set_cmdstan_path(     path = file.path(Sys.getenv(\"STAN_PATH\"), \"cmdstan\") )"},{"path":"https://insightrx.github.io/PKPDposterior/index.html","id":"contributing","dir":"","previous_headings":"","what":"Contributing","title":"MCMC-Based MIPD","text":"welcome input community: think encountered bug, please submit issue GitHub page. Please include reproducible example unexpected behavior. Please open pull request fix updates improve package. ’re sure proposed changes useful within scope package, feel free contact one authors package.","code":""},{"path":"https://insightrx.github.io/PKPDposterior/index.html","id":"disclaimer","dir":"","previous_headings":"","what":"Disclaimer","title":"MCMC-Based MIPD","text":"functionality R package provided “”. authors adhere software development best practices, software may still contain unintended errors. InsightRX Inc. authors package can held liable damages resulting use software. use software package, user waives warranties, expressed implied, including warranties accuracy, quality suitability InsightRX particular purpose, either medical non-medical. ©","code":""},{"path":"https://insightrx.github.io/PKPDposterior/reference/PKPDposterior-package.html","id":null,"dir":"Reference","previous_headings":"","what":"PKPDposterior: MCMC-Based MIPD — PKPDposterior-package","title":"PKPDposterior: MCMC-Based MIPD — PKPDposterior-package","text":"MCMC-based inference based population PK model individual TDM data.","code":""},{"path":[]},{"path":"https://insightrx.github.io/PKPDposterior/reference/PKPDposterior-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"PKPDposterior: MCMC-Based MIPD — PKPDposterior-package","text":"Maintainer: Ron Keizer ron@insight-rx.com Authors: Jasmine Hughes jasmine@insight-rx.com Dominic Tong dominic@insight-rx.com Kara Woo kara@insight-rx.com contributors: InsightRX [copyright holder, funder]","code":""},{"path":"https://insightrx.github.io/PKPDposterior/reference/PKPDsim_to_stan_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Prepare data object for use in get_mcmc_posterior() — PKPDsim_to_stan_data","title":"Prepare data object for use in get_mcmc_posterior() — PKPDsim_to_stan_data","text":"Prepare data object use get_mcmc_posterior()","code":""},{"path":"https://insightrx.github.io/PKPDposterior/reference/PKPDsim_to_stan_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prepare data object for use in get_mcmc_posterior() — PKPDsim_to_stan_data","text":"","code":"PKPDsim_to_stan_data(   regimen,   covariates,   data,   parameters,   fix = NULL,   iiv,   ruv,   dose_cmt = 1,   ltbs = FALSE,   verbose = FALSE )"},{"path":"https://insightrx.github.io/PKPDposterior/reference/PKPDsim_to_stan_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prepare data object for use in get_mcmc_posterior() — PKPDsim_to_stan_data","text":"regimen Regimen object (created PKPDsim::new_regimen()) covariates List covariate objects created PKPDsim::new_covariate() data Data frame columns t, dv, cmt parameters list population parameters, e.g. list(CL = 5, V = 50) fix optional, vector parameters fix. parameters sampled posterior negligibly narrow distribution. considered quick--dirty way fix parameter, slow HMC sampling. therefore used testing purposes. properly fix parameter, remove parameter list hardcode model. iiv list inter-individual variability parameters. exact list elements parameters, magnitude supplied SD scale. ruv magnitude residual unexplained variability (RUV). list specifying proportional /additive error magnitude standard deviation scale, e.g. list(\"prop\" = 0.1, \"add\" = 1). ltbs TRUE, specify add part, applies additive error log-scale (becomes approximate proportional error). dose_cmt Specify dose compartment. Observation compartment dataset irrelevant, handled model. ltbs use log-transform--sides approach observations? Default FALSE. verbose verbosity","code":""},{"path":"https://insightrx.github.io/PKPDposterior/reference/calc_stats_for_draws_predictions.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculates statistics on draws from posterior for predictions (e.g.\nconcentrations) — calc_stats_for_draws_predictions","title":"Calculates statistics on draws from posterior for predictions (e.g.\nconcentrations) — calc_stats_for_draws_predictions","text":"Calculates statistics draws posterior predictions (e.g. concentrations)","code":""},{"path":"https://insightrx.github.io/PKPDposterior/reference/calc_stats_for_draws_predictions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculates statistics on draws from posterior for predictions (e.g.\nconcentrations) — calc_stats_for_draws_predictions","text":"","code":"calc_stats_for_draws_predictions(post, obs_type = \"pk\")"},{"path":"https://insightrx.github.io/PKPDposterior/reference/calc_stats_for_draws_predictions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculates statistics on draws from posterior for predictions (e.g.\nconcentrations) — calc_stats_for_draws_predictions","text":"post posterior object obs_type observation type label, default pk","code":""},{"path":"https://insightrx.github.io/PKPDposterior/reference/calc_stats_for_draws_predictions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculates statistics on draws from posterior for predictions (e.g.\nconcentrations) — calc_stats_for_draws_predictions","text":"data frame statistics observation timepoint, mean, median, sd, confidence intervals etc.","code":""},{"path":"https://insightrx.github.io/PKPDposterior/reference/check_stan_input_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Check that the supplied input data for Stan is OK for the model — check_stan_input_data","title":"Check that the supplied input data for Stan is OK for the model — check_stan_input_data","text":"Check supplied input data Stan OK model","code":""},{"path":"https://insightrx.github.io/PKPDposterior/reference/check_stan_input_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check that the supplied input data for Stan is OK for the model — check_stan_input_data","text":"","code":"check_stan_input_data(code, data)"},{"path":"https://insightrx.github.io/PKPDposterior/reference/check_stan_input_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check that the supplied input data for Stan is OK for the model — check_stan_input_data","text":"code Stan model code data input data, generated using new_stan_data(), includes element stan_data checked function.","code":""},{"path":"https://insightrx.github.io/PKPDposterior/reference/covariates_to_nm.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert list of covariate objects to NONMEM formatted data — covariates_to_nm","title":"Convert list of covariate objects to NONMEM formatted data — covariates_to_nm","text":"Convert list covariate objects NONMEM formatted data","code":""},{"path":"https://insightrx.github.io/PKPDposterior/reference/covariates_to_nm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert list of covariate objects to NONMEM formatted data — covariates_to_nm","text":"","code":"covariates_to_nm(covariates)"},{"path":"https://insightrx.github.io/PKPDposterior/reference/covariates_to_nm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert list of covariate objects to NONMEM formatted data — covariates_to_nm","text":"covariates List covariate objects created PKPDsim::new_covariate()","code":""},{"path":"https://insightrx.github.io/PKPDposterior/reference/extract_from_draws.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract info for observed data from posterior draws.\nIncludes e.g. the quantile of the observed data in the posterior draws\nand the mean, 95% CI, and standard deviations of the posterior. — extract_from_draws","title":"Extract info for observed data from posterior draws.\nIncludes e.g. the quantile of the observed data in the posterior draws\nand the mean, 95% CI, and standard deviations of the posterior. — extract_from_draws","text":"Extract info observed data posterior draws. Includes e.g. quantile observed data posterior draws mean, 95% CI, standard deviations posterior.","code":""},{"path":"https://insightrx.github.io/PKPDposterior/reference/extract_from_draws.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract info for observed data from posterior draws.\nIncludes e.g. the quantile of the observed data in the posterior draws\nand the mean, 95% CI, and standard deviations of the posterior. — extract_from_draws","text":"","code":"extract_from_draws(post, verbose = TRUE)"},{"path":"https://insightrx.github.io/PKPDposterior/reference/extract_from_draws.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract info for observed data from posterior draws.\nIncludes e.g. the quantile of the observed data in the posterior draws\nand the mean, 95% CI, and standard deviations of the posterior. — extract_from_draws","text":"post posterior object CmdStanR verbose verbosity","code":""},{"path":"https://insightrx.github.io/PKPDposterior/reference/extract_map_estimates.html","id":null,"dir":"Reference","previous_headings":"","what":"Extra MAP estimates from the posterior — extract_map_estimates","title":"Extra MAP estimates from the posterior — extract_map_estimates","text":"Reports mode posterior parameter","code":""},{"path":"https://insightrx.github.io/PKPDposterior/reference/extract_map_estimates.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extra MAP estimates from the posterior — extract_map_estimates","text":"","code":"extract_map_estimates(post, parameters = NULL, ...)"},{"path":"https://insightrx.github.io/PKPDposterior/reference/extract_map_estimates.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extra MAP estimates from the posterior — extract_map_estimates","text":"post posterior estimate object get_mcmc_posterior(). parameters parameters fetch. ... arguments passed get_mode calculating parameter mode sampled values.","code":""},{"path":"https://insightrx.github.io/PKPDposterior/reference/extract_map_estimates.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extra MAP estimates from the posterior — extract_map_estimates","text":"list modes posterior (MAP estimate) parameters","code":""},{"path":"https://insightrx.github.io/PKPDposterior/reference/generate_stan_code.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate a Stan model code from model definitions and template code.\nThis is an internal function. For creating a Stan model, please use\nnew_stan_model(). — generate_stan_code","title":"Generate a Stan model code from model definitions and template code.\nThis is an internal function. For creating a Stan model, please use\nnew_stan_model(). — generate_stan_code","text":"Generate Stan model code model definitions template code. internal function. creating Stan model, please use new_stan_model().","code":""},{"path":"https://insightrx.github.io/PKPDposterior/reference/generate_stan_code.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate a Stan model code from model definitions and template code.\nThis is an internal function. For creating a Stan model, please use\nnew_stan_model(). — generate_stan_code","text":"","code":"generate_stan_code(template_code, definitions)"},{"path":"https://insightrx.github.io/PKPDposterior/reference/generate_stan_code.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate a Stan model code from model definitions and template code.\nThis is an internal function. For creating a Stan model, please use\nnew_stan_model(). — generate_stan_code","text":"template_code template model code definitions list model definitions, parsed using parse_model_definitions().","code":""},{"path":"https://insightrx.github.io/PKPDposterior/reference/get_mcmc_posterior.html","id":null,"dir":"Reference","previous_headings":"","what":"Draw samples from the posterior given a Stan/Torsten model\nand patient data — get_mcmc_posterior","title":"Draw samples from the posterior given a Stan/Torsten model\nand patient data — get_mcmc_posterior","text":"Draw samples posterior given Stan/Torsten model patient data","code":""},{"path":"https://insightrx.github.io/PKPDposterior/reference/get_mcmc_posterior.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Draw samples from the posterior given a Stan/Torsten model\nand patient data — get_mcmc_posterior","text":"","code":"get_mcmc_posterior(   mod,   data,   seed = 12345,   chains = 1,   iter_warmup = 500,   iter_sampling = 500,   output_dir = tempdir(),   verbose = TRUE,   method = c(\"hmc\", \"vi\"),   skip_processing = FALSE,   ... )"},{"path":"https://insightrx.github.io/PKPDposterior/reference/get_mcmc_posterior.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Draw samples from the posterior given a Stan/Torsten model\nand patient data — get_mcmc_posterior","text":"mod compiled Stan model data dataset (see new_stan_data()) seed seed sampling chains number MCMC chains simulate, passed Stan model iter_warmup number warmup (burn-) iterations iter_sampling number regular sampling iterations output_dir output directory verbose verbosity method either hmc (Hamilton Monte Carlo, using NUTS default) vi (variational inference). skip_processing return raw output sampler, without processing. can sometimes useful errors occur processing stage. ... arguments passed mod$sample() Common arguments cmdstanr include: chains parallel_chains iter_warmup iter_sampling thim adapt_delta","code":""},{"path":[]},{"path":"https://insightrx.github.io/PKPDposterior/reference/get_mode.html","id":null,"dir":"Reference","previous_headings":"","what":"Simple mode estimation function from density — get_mode","title":"Simple mode estimation function from density — get_mode","text":"function implements simple estimation model using peak univariate kernel density calculated stats::density(). advanced methods available modeest package.","code":""},{"path":"https://insightrx.github.io/PKPDposterior/reference/get_mode.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simple mode estimation function from density — get_mode","text":"","code":"get_mode(x, ...)"},{"path":"https://insightrx.github.io/PKPDposterior/reference/get_mode.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simple mode estimation function from density — get_mode","text":"x vector continuous values estimate mode ... function arguments passed stats::density()","code":""},{"path":"https://insightrx.github.io/PKPDposterior/reference/get_n_cmt.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the number of compartments, either from analytical solver definition,\nor from the dAdt definitions in the ODE block. — get_n_cmt","title":"Get the number of compartments, either from analytical solver definition,\nor from the dAdt definitions in the ODE block. — get_n_cmt","text":"Get number compartments, either analytical solver definition, dAdt definitions ODE block.","code":""},{"path":"https://insightrx.github.io/PKPDposterior/reference/get_n_cmt.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the number of compartments, either from analytical solver definition,\nor from the dAdt definitions in the ODE block. — get_n_cmt","text":"","code":"get_n_cmt(solver, ode = NULL)"},{"path":"https://insightrx.github.io/PKPDposterior/reference/get_n_cmt.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the number of compartments, either from analytical solver definition,\nor from the dAdt definitions in the ODE block. — get_n_cmt","text":"solver Torsten solver use. Starts pmx_solve_. ode code differential equation system, analytic solver used.","code":""},{"path":"https://insightrx.github.io/PKPDposterior/reference/get_parameter_tables.html","id":null,"dir":"Reference","previous_headings":"","what":"Get parameter tables from posterior and prior — get_parameter_tables","title":"Get parameter tables from posterior and prior — get_parameter_tables","text":"Get parameter tables posterior prior","code":""},{"path":"https://insightrx.github.io/PKPDposterior/reference/get_parameter_tables.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get parameter tables from posterior and prior — get_parameter_tables","text":"","code":"get_parameter_tables(post, long = FALSE)"},{"path":"https://insightrx.github.io/PKPDposterior/reference/get_parameter_tables.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get parameter tables from posterior and prior — get_parameter_tables","text":"post posterior object get_mcmc_posterior long return tables long format? Default FALSE","code":""},{"path":"https://insightrx.github.io/PKPDposterior/reference/get_quantile.html","id":null,"dir":"Reference","previous_headings":"","what":"Get quantile for a given new value, given a vector of values. — get_quantile","title":"Get quantile for a given new value, given a vector of values. — get_quantile","text":"Get quantile given new value, given vector values.","code":""},{"path":"https://insightrx.github.io/PKPDposterior/reference/get_quantile.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get quantile for a given new value, given a vector of values. — get_quantile","text":"","code":"get_quantile(x, y)"},{"path":"https://insightrx.github.io/PKPDposterior/reference/get_quantile.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get quantile for a given new value, given a vector of values. — get_quantile","text":"x value calculate quantile y vector values, posterior draws cases","code":""},{"path":"https://insightrx.github.io/PKPDposterior/reference/load_model.html","id":null,"dir":"Reference","previous_headings":"","what":"Initialize a model\nIf model is not compiled yet, than compile it. Otherwise used the binary. — load_model","title":"Initialize a model\nIf model is not compiled yet, than compile it. Otherwise used the binary. — load_model","text":"Initialize model model compiled yet, compile . Otherwise used binary.","code":""},{"path":"https://insightrx.github.io/PKPDposterior/reference/load_model.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Initialize a model\nIf model is not compiled yet, than compile it. Otherwise used the binary. — load_model","text":"","code":"load_model(model_file, force = FALSE, verbose = FALSE, ...)"},{"path":"https://insightrx.github.io/PKPDposterior/reference/load_model.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Initialize a model\nIf model is not compiled yet, than compile it. Otherwise used the binary. — load_model","text":"model_file model file compiled, either full path model, else look models folder inside installed package folder. force force recompile verbose show output Stan / cmdstanr? Defaults FALSE. ... passed onto","code":""},{"path":"https://insightrx.github.io/PKPDposterior/reference/new_ode_function.html","id":null,"dir":"Reference","previous_headings":"","what":"Generates the ODE function that is used in a Stan/Torsten model — new_ode_function","title":"Generates the ODE function that is used in a Stan/Torsten model — new_ode_function","text":"Generates ODE function used Stan/Torsten model","code":""},{"path":"https://insightrx.github.io/PKPDposterior/reference/new_ode_function.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generates the ODE function that is used in a Stan/Torsten model — new_ode_function","text":"","code":"new_ode_function(ode, parameter_names, n_cmt)"},{"path":"https://insightrx.github.io/PKPDposterior/reference/new_ode_function.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generates the ODE function that is used in a Stan/Torsten model — new_ode_function","text":"ode Stan code ODE block parameter_names vector parameter names. Needs order defined chosen Torsten analytic solver. n_cmt number compartments ODE","code":""},{"path":"https://insightrx.github.io/PKPDposterior/reference/new_ode_function.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generates the ODE function that is used in a Stan/Torsten model — new_ode_function","text":"Character vector containing valid Stan code ODE function","code":""},{"path":"https://insightrx.github.io/PKPDposterior/reference/new_stan_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a data object for use in get_mcmc_posterior() — new_stan_data","title":"Create a data object for use in get_mcmc_posterior() — new_stan_data","text":"Create data object use get_mcmc_posterior()","code":""},{"path":"https://insightrx.github.io/PKPDposterior/reference/new_stan_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a data object for use in get_mcmc_posterior() — new_stan_data","text":"","code":"new_stan_data(   regimen,   covariates,   data,   parameters,   fix = NULL,   iiv,   ruv,   dose_cmt = 1,   ltbs = FALSE,   verbose = FALSE )"},{"path":"https://insightrx.github.io/PKPDposterior/reference/new_stan_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a data object for use in get_mcmc_posterior() — new_stan_data","text":"regimen Regimen object (created PKPDsim::new_regimen()) covariates List covariate objects created PKPDsim::new_covariate() data Data frame columns t, dv, cmt parameters list population parameters, e.g. list(CL = 5, V = 50) fix optional, vector parameters fix. parameters sampled posterior negligibly narrow distribution. considered quick--dirty way fix parameter, slow HMC sampling. therefore used testing purposes. properly fix parameter, remove parameter list hardcode model. iiv list inter-individual variability parameters. exact list elements parameters, magnitude supplied SD scale. ruv magnitude residual unexplained variability (RUV). list specifying proportional /additive error magnitude standard deviation scale, e.g. list(\"prop\" = 0.1, \"add\" = 1). ltbs TRUE, specify add part, applies additive error log-scale (becomes approximate proportional error). dose_cmt Specify dose compartment. Observation compartment dataset irrelevant, handled model. ltbs use log-transform--sides approach observations? Default FALSE. verbose verbosity","code":""},{"path":"https://insightrx.github.io/PKPDposterior/reference/new_stan_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a data object for use in get_mcmc_posterior() — new_stan_data","text":"Named list suitable passing Torsten.","code":""},{"path":"https://insightrx.github.io/PKPDposterior/reference/new_stan_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a data object for use in get_mcmc_posterior() — new_stan_data","text":"","code":"regimen <- PKPDsim::new_regimen(   amt = 1500,    n = 4,    times = c(0, 12, 24, 36),    type = 'infusion' ) covariates <- list(   WT = PKPDsim::new_covariate(     value = c(150, 149.5),     times = c(0, 30),     unit = \"kg\"   ),   CRCL = PKPDsim::new_covariate(     value = c(6.5, 6.7),     times = c(0, 12),     unit = \"l/hr\"   ) ) tdm_data <- data.frame(   t = c(1, 2),    dv = c(900, 800),    cmt = c(2, 2) ) new_stan_data(   regimen,    covariates,    tdm_data,   parameters = list(CL = 5, V = 50),   iiv = list(CL = 0.1, V = 0.2),   ruv = list(prop = 0.1, add = 1) ) #> $parameters #> $parameters$CL #> [1] 5 #>  #> $parameters$V #> [1] 50 #>  #>  #> $fix #> NULL #>  #> $regimen #>    t     type  amt t_inf #> 1  0 infusion 1500     1 #> 2 12 infusion 1500     1 #> 3 24 infusion 1500     1 #> 4 36 infusion 1500     1 #>  #> $covariates #> $covariates$WT #>   value times unit implementation #> 1 150.0     0   kg    interpolate #> 2 149.5    30   kg    interpolate #>  #> $covariates$CRCL #>   value times unit implementation #> 1   6.5     0 l/hr    interpolate #> 2   6.7    12 l/hr    interpolate #>  #>  #> $data #>   t  dv cmt #> 1 1 900   2 #> 2 2 800   2 #>  #> $iiv #> $iiv$CL #> [1] 0.1 #>  #> $iiv$V #> [1] 0.2 #>  #>  #> $ruv #> $ruv$prop #> [1] 0.1 #>  #> $ruv$add #> [1] 1 #>  #>  #> $stan_data #> $stan_data$ID #> [1] 1 1 1 1 1 1 1 1 1 #>  #> $stan_data$time #> [1]  0  0  1  2 12 12 24 30 36 #>  #> $stan_data$cmt #> [1] 1 2 2 2 1 2 1 2 1 #>  #> $stan_data$DV #> [1]   0   0 900 800   0   0   0   0   0 #>  #> $stan_data$amt #> [1] 1500    0    0    0 1500    0 1500    0 1500 #>  #> $stan_data$evid #> [1] 1 2 0 0 1 2 1 2 1 #>  #> $stan_data$MDV #> [1] 1 0 0 0 1 0 1 0 1 #>  #> $stan_data$rate #> [1] 1500    0    0    0 1500    0 1500    0 1500 #>  #> $stan_data$WT #> [1] 150.0 150.0 150.0 150.0 150.0 150.0 150.0 149.5 149.5 #>  #> $stan_data$CRCL #> [1] 6.5 6.5 6.5 6.5 6.5 6.7 6.7 6.7 6.7 #>  #> $stan_data$addl #> [1] 0 0 0 0 0 0 0 0 0 #>  #> $stan_data$ss #> [1] 0 0 0 0 0 0 0 0 0 #>  #> $stan_data$ii #> [1] 0 0 0 0 0 0 0 0 0 #>  #> $stan_data$theta_CL #> [1] 5 #>  #> $stan_data$omega_CL #> [1] 0.1 #>  #> $stan_data$theta_V #> [1] 50 #>  #> $stan_data$omega_V #> [1] 0.2 #>  #> $stan_data$dv_pk #> [1] 900 800 #>  #> $stan_data$i_obs_pk #> [1] 3 4 #>  #> $stan_data$n_obs_pk #> [1] 2 #>  #> $stan_data$ruv_prop_pk #> [1] 0.1 #>  #> $stan_data$ruv_add_pk #> [1] 1 #>  #> $stan_data$ltbs_pk #> [1] FALSE #>  #> $stan_data$n_t #> [1] 9 #>  #>"},{"path":"https://insightrx.github.io/PKPDposterior/reference/new_stan_model.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a new stan model using a template — new_stan_model","title":"Create a new stan model using a template — new_stan_model","text":"Create new stan model using template","code":""},{"path":"https://insightrx.github.io/PKPDposterior/reference/new_stan_model.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a new stan model using a template — new_stan_model","text":"","code":"new_stan_model(   parameters,   parameter_definitions,   ode = NULL,   covariate_definitions = NULL,   solver = c(\"pmx_solve_onecpt\", \"pmx_solve_twocpt\", \"pmx_solve_rk45\",     \"pmx_solve_adams\", \"pmx_solve_bdf\"),   template = \"template.stan\",   obs_types = NULL,   obs_cmt = NULL,   scale = NULL,   custom_ipred = NULL,   verbose = FALSE )"},{"path":"https://insightrx.github.io/PKPDposterior/reference/new_stan_model.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a new stan model using a template — new_stan_model","text":"parameters list parameter values, e.g. list(CL = 5, V = 50). parameter_definitions list parameter definitions. See example . ode code differential equation system, analytic solver used. covariate_definitions list covariate definitions. See example . solver Torsten solver use. Starts pmx_solve_. template internal Stan template file use. Defaults template.stan obs_types vector observed data types. NULL, use \"pk\". obs_cmt observation compartment, list observation compartments observation type multiple observation types. E.g. 2 list(pk = 2, pd = 8). scale scale definition. Can either parameter expression number. custom_ipred list custom definitions individual predictions observation type. Sometimes needed flexibility needed scale parameter provides. verbose verbosity","code":""},{"path":"https://insightrx.github.io/PKPDposterior/reference/new_stan_model.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a new stan model using a template — new_stan_model","text":"filename","code":""},{"path":"https://insightrx.github.io/PKPDposterior/reference/new_stan_model.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a new stan model using a template — new_stan_model","text":"","code":"parameters <- list(CL = 5, V1 = 50, Q = 5, V2 = 100) iiv <- list(CL = 0.27, Q = 0.49, V1 = 0.15, V2 = 1.3) ruv <- list(add = 1.6, prop = 0.15)  model_file <- new_stan_model(   parameters = parameters,   parameter_definitions = list(    \"CL\" = \"CL * (1.0 + 0.0154 * ((CRCL[j] * 16.6667) - 66.0))\",    \"Q\"  = \"Q\",    \"V1\" = \"V1 * WT[j]\",    \"V2\" = \"V2 * WT[j]\",    \"KA\" = \"0\"    ),   covariate_definitions = list(     \"CRCL\" = \"real\", # CrCl in L/hr     \"WT\" = \"real\"    # WT in kg   ),   solver = \"pmx_solve_twocpt\",   obs_cmt = 2,   scale = \"(V1 * mean(WT))\",   verbose = TRUE ) #> assuming scale definition (V1 * mean(WT)) for all observation types #> assuming observation type 2 for all observation types"},{"path":"https://insightrx.github.io/PKPDposterior/reference/nonmem_to_stan_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Reshape NONMEM data into PKPDposterior-ready or Stan-ready data — nonmem_to_stan_data","title":"Reshape NONMEM data into PKPDposterior-ready or Stan-ready data — nonmem_to_stan_data","text":"Reshape NONMEM data PKPDposterior-ready Stan-ready data","code":""},{"path":"https://insightrx.github.io/PKPDposterior/reference/nonmem_to_stan_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reshape NONMEM data into PKPDposterior-ready or Stan-ready data — nonmem_to_stan_data","text":"","code":"nonmem_to_stan_data(   nm,   covariate_cols,   parameters,   iiv,   ruv,   covariates_implementation = list(),   dose_cmt = 1,   ltbs = FALSE,   verbose = FALSE )"},{"path":"https://insightrx.github.io/PKPDposterior/reference/nonmem_to_stan_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reshape NONMEM data into PKPDposterior-ready or Stan-ready data — nonmem_to_stan_data","text":"nm NONMEM data frame single patient, columns TIME, EVID, DV, AMT. Observations DV assumed taken compartment 2 unless otherwise specified (optional) \"CMT\" column. covariate_cols names columns nm used covariates parameters list population parameters, e.g. list(CL = 5, V = 50) iiv list inter-individual variability parameters. exact list elements parameters, magnitude supplied SD scale. ruv magnitude residual unexplained variability (RUV). list specifying proportional /additive error magnitude standard deviation scale, e.g. list(\"prop\" = 0.1, \"add\" = 1). ltbs TRUE, specify add part, applies additive error log-scale (becomes approximate proportional error). covariates_implementation named list indicating implementation method used covariate. See PKPDsim::new_covariate options. dose_cmt Specify dose compartment. Observation compartment dataset irrelevant, handled model. ltbs use log-transform--sides approach observations? Default FALSE. verbose verbosity","code":""},{"path":"https://insightrx.github.io/PKPDposterior/reference/nonmem_to_stan_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Reshape NONMEM data into PKPDposterior-ready or Stan-ready data — nonmem_to_stan_data","text":"Named list suitable passing Torsten.","code":""},{"path":"https://insightrx.github.io/PKPDposterior/reference/parse_model_definitions.html","id":null,"dir":"Reference","previous_headings":"","what":"Parse model definitions into a list that can be used to generate a Stan\nmodel — parse_model_definitions","title":"Parse model definitions into a list that can be used to generate a Stan\nmodel — parse_model_definitions","text":"Parse model definitions list can used generate Stan model","code":""},{"path":"https://insightrx.github.io/PKPDposterior/reference/parse_model_definitions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Parse model definitions into a list that can be used to generate a Stan\nmodel — parse_model_definitions","text":"","code":"parse_model_definitions(   parameters,   parameter_definitions,   ode,   covariate_definitions,   solver,   obs_types,   obs_cmt,   scale,   custom_ipred )"},{"path":"https://insightrx.github.io/PKPDposterior/reference/parse_model_definitions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parse model definitions into a list that can be used to generate a Stan\nmodel — parse_model_definitions","text":"parameters list parameter values, e.g. list(CL = 5, V = 50). parameter_definitions list parameter definitions. See example . ode code differential equation system, analytic solver used. covariate_definitions list covariate definitions. See example . solver Torsten solver use. Starts pmx_solve_. obs_types vector observed data types. NULL, use \"pk\". obs_cmt observation compartment, list observation compartments observation type multiple observation types. E.g. 2 list(pk = 2, pd = 8). scale scale definition. Can either parameter expression number. custom_ipred list custom definitions individual predictions observation type. Sometimes needed flexibility needed scale parameter provides.","code":""},{"path":"https://insightrx.github.io/PKPDposterior/reference/plot_params.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot posterior distributions of model parameters\nIf the model also supplies prior parameters, specified e.g. as prior_CL\nfor the CL parameter, it will plot them as well. — plot_params","title":"Plot posterior distributions of model parameters\nIf the model also supplies prior parameters, specified e.g. as prior_CL\nfor the CL parameter, it will plot them as well. — plot_params","text":"Plot posterior distributions model parameters model also supplies prior parameters, specified e.g. prior_CL CL parameter, plot well.","code":""},{"path":"https://insightrx.github.io/PKPDposterior/reference/plot_params.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot posterior distributions of model parameters\nIf the model also supplies prior parameters, specified e.g. as prior_CL\nfor the CL parameter, it will plot them as well. — plot_params","text":"","code":"plot_params(post)"},{"path":"https://insightrx.github.io/PKPDposterior/reference/plot_params.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot posterior distributions of model parameters\nIf the model also supplies prior parameters, specified e.g. as prior_CL\nfor the CL parameter, it will plot them as well. — plot_params","text":"post posterior object get_mcmc_posterior()","code":""},{"path":"https://insightrx.github.io/PKPDposterior/reference/plot_params.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot posterior distributions of model parameters\nIf the model also supplies prior parameters, specified e.g. as prior_CL\nfor the CL parameter, it will plot them as well. — plot_params","text":"ggplot2 object posterior distributions (histograms) faceted parameter.","code":""},{"path":"https://insightrx.github.io/PKPDposterior/reference/plot_percentile.html","id":null,"dir":"Reference","previous_headings":"","what":"Visual representation of percentile estimate — plot_percentile","title":"Visual representation of percentile estimate — plot_percentile","text":"Adapted PKPDmap::plot_eta()","code":""},{"path":"https://insightrx.github.io/PKPDposterior/reference/plot_percentile.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Visual representation of percentile estimate — plot_percentile","text":"","code":"plot_percentile(x)"},{"path":"https://insightrx.github.io/PKPDposterior/reference/plot_percentile.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Visual representation of percentile estimate — plot_percentile","text":"x percentile parameter observation posterior","code":""},{"path":"https://insightrx.github.io/PKPDposterior/reference/plot_predictions.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot predictions from posterior (or prior) simulations\nRequires as input a summarized simulation data.frame, e.g. obtained using\nsim_from_draws(post, summarize=TRUE) — plot_predictions","title":"Plot predictions from posterior (or prior) simulations\nRequires as input a summarized simulation data.frame, e.g. obtained using\nsim_from_draws(post, summarize=TRUE) — plot_predictions","text":"Plot predictions posterior (prior) simulations Requires input summarized simulation data.frame, e.g. obtained using sim_from_draws(post, summarize=TRUE)","code":""},{"path":"https://insightrx.github.io/PKPDposterior/reference/plot_predictions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot predictions from posterior (or prior) simulations\nRequires as input a summarized simulation data.frame, e.g. obtained using\nsim_from_draws(post, summarize=TRUE) — plot_predictions","text":"","code":"plot_predictions(sim_data, obs = NULL)"},{"path":"https://insightrx.github.io/PKPDposterior/reference/plot_predictions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot predictions from posterior (or prior) simulations\nRequires as input a summarized simulation data.frame, e.g. obtained using\nsim_from_draws(post, summarize=TRUE) — plot_predictions","text":"sim_data data.frame simulated predictions obs observed data. data.frame columns t dv, e.g. tdm_data <- data.frame(t = c(2.5, 11.5),  dv = c(40, 14))","code":""},{"path":"https://insightrx.github.io/PKPDposterior/reference/praise_emoji.html","id":null,"dir":"Reference","previous_headings":"","what":"Praise using emoji. — praise_emoji","title":"Praise using emoji. — praise_emoji","text":"Taken testthat. checking utf8 compatibility.","code":""},{"path":"https://insightrx.github.io/PKPDposterior/reference/praise_emoji.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Praise using emoji. — praise_emoji","text":"","code":"praise_emoji()"},{"path":"https://insightrx.github.io/PKPDposterior/reference/print.PKPDposterior.html","id":null,"dir":"Reference","previous_headings":"","what":"Print function for PKPDposterior object — print.PKPDposterior","title":"Print function for PKPDposterior object — print.PKPDposterior","text":"Print function PKPDposterior object","code":""},{"path":"https://insightrx.github.io/PKPDposterior/reference/print.PKPDposterior.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print function for PKPDposterior object — print.PKPDposterior","text":"","code":"# S3 method for PKPDposterior print(x, ...)"},{"path":"https://insightrx.github.io/PKPDposterior/reference/print.PKPDposterior.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print function for PKPDposterior object — print.PKPDposterior","text":"x posterior object (get_mcmc_posterior()) ... arguments passed onto print function","code":""},{"path":"https://insightrx.github.io/PKPDposterior/reference/prior_from_PKPDsim_model.html","id":null,"dir":"Reference","previous_headings":"","what":"Get prior for Torsten from a PKPDsim model package — prior_from_PKPDsim_model","title":"Get prior for Torsten from a PKPDsim model package — prior_from_PKPDsim_model","text":"Get prior Torsten PKPDsim model package","code":""},{"path":"https://insightrx.github.io/PKPDposterior/reference/prior_from_PKPDsim_model.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get prior for Torsten from a PKPDsim model package — prior_from_PKPDsim_model","text":"","code":"prior_from_PKPDsim_model(model, map = list(), drop = c())"},{"path":"https://insightrx.github.io/PKPDposterior/reference/prior_from_PKPDsim_model.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get prior for Torsten from a PKPDsim model package — prior_from_PKPDsim_model","text":"model package name map remap model parameters Stan PKPDsim syntax, specified list. E.g. map = list(V1 = V) drop vector parameter names interested need provide.","code":""},{"path":"https://insightrx.github.io/PKPDposterior/reference/remap.html","id":null,"dir":"Reference","previous_headings":"","what":"Remap named list or data.frame using a translation map — remap","title":"Remap named list or data.frame using a translation map — remap","text":"Remap named list data.frame using translation map","code":""},{"path":"https://insightrx.github.io/PKPDposterior/reference/remap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Remap named list or data.frame using a translation map — remap","text":"","code":"remap(x, map, reverse = FALSE)"},{"path":"https://insightrx.github.io/PKPDposterior/reference/remap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Remap named list or data.frame using a translation map — remap","text":"x names list data.frame map map used translate elements x, e.g. list(\"CLi\" = \"CL\", \"V\" = \"V1\") reverse interpret map reverse","code":""},{"path":"https://insightrx.github.io/PKPDposterior/reference/sim_from_draws.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulate from posterior or prior draws using PKPDsim::sim() — sim_from_draws","title":"Simulate from posterior or prior draws using PKPDsim::sim() — sim_from_draws","text":"Simulate posterior prior draws using PKPDsim::sim()","code":""},{"path":"https://insightrx.github.io/PKPDposterior/reference/sim_from_draws.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulate from posterior or prior draws using PKPDsim::sim() — sim_from_draws","text":"","code":"sim_from_draws(   post,   model,   map = NULL,   parameters = NULL,   prior = FALSE,   n = NULL,   variable = \"y\",   summarize = FALSE,   ci = c(0.05, 0.95),   ... )"},{"path":"https://insightrx.github.io/PKPDposterior/reference/sim_from_draws.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simulate from posterior or prior draws using PKPDsim::sim() — sim_from_draws","text":"post posterior object get_mcmc_posterior() model PKPDsim model function map list parameter name remapping Stan model PKPDsim model. parameters list parameter estimates used simulation already present either posterior prior draws. .e. specified parameters named list override parameters name samples. prior simulate prior (TRUE) posterior (FALSE) n number parameter draws / simulations . value NULL indicates draws used. variable use variable simulated data, defaults y. summarize data summarized median confidence interval? Defaults FALSE, .e. return simulated observations parameter draws. ci confidence interval use summary=TRUE. ... arguments passed PKPDsim::sim","code":""},{"path":"https://insightrx.github.io/PKPDposterior/reference/tdm_to_nm.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert TDM data to NONMEM format — tdm_to_nm","title":"Convert TDM data to NONMEM format — tdm_to_nm","text":"Convert TDM data NONMEM format","code":""},{"path":"https://insightrx.github.io/PKPDposterior/reference/tdm_to_nm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert TDM data to NONMEM format — tdm_to_nm","text":"","code":"tdm_to_nm(data)"},{"path":"https://insightrx.github.io/PKPDposterior/reference/tdm_to_nm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert TDM data to NONMEM format — tdm_to_nm","text":"data Data frame columns t, dv, cmt","code":""},{"path":"https://insightrx.github.io/PKPDposterior/reference/validate_stan_model.html","id":null,"dir":"Reference","previous_headings":"","what":"Validate the numerical simulation properties of a Stan model vs the model\nwritten in PKPDsim. — validate_stan_model","title":"Validate the numerical simulation properties of a Stan model vs the model\nwritten in PKPDsim. — validate_stan_model","text":"Validate numerical simulation properties Stan model vs model written PKPDsim.","code":""},{"path":"https://insightrx.github.io/PKPDposterior/reference/validate_stan_model.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Validate the numerical simulation properties of a Stan model vs the model\nwritten in PKPDsim. — validate_stan_model","text":"","code":"validate_stan_model(   stan_model,   pkpdsim_model,   data,   mapping = NULL,   n = 50,   max_abs_delta = 0.001,   max_rel_delta = 1e-05,   verbose = FALSE )"},{"path":"https://insightrx.github.io/PKPDposterior/reference/validate_stan_model.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Validate the numerical simulation properties of a Stan model vs the model\nwritten in PKPDsim. — validate_stan_model","text":"stan_model Stan/Torsten model pkpdsim_model PKPDsim implementation data dataset (see PKPDsim_to_stan_data()) mapping remap model parameters Stan PKPDsim syntax, specified list. E.g. map = list(V1 = V). n number patient datasets use validation. Default 50. max_abs_delta maximum allowed absolute delta Stan PKPDsim max_rel_delta maximum allowed relative delta Stan PKPDsim, PKPDsim treated reference. verbose verbose output?","code":""},{"path":"https://insightrx.github.io/PKPDposterior/reference/write_stan_model.html","id":null,"dir":"Reference","previous_headings":"","what":"Write a Stan model code to file — write_stan_model","title":"Write a Stan model code to file — write_stan_model","text":"Write Stan model code file","code":""},{"path":"https://insightrx.github.io/PKPDposterior/reference/write_stan_model.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Write a Stan model code to file — write_stan_model","text":"","code":"write_stan_model(code, file = NULL)"},{"path":"https://insightrx.github.io/PKPDposterior/reference/write_stan_model.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Write a Stan model code to file — write_stan_model","text":"code Stan code (vector character strings). file filename write . name specified, create temporary file.","code":""},{"path":"https://insightrx.github.io/PKPDposterior/reference/write_stan_model.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Write a Stan model code to file — write_stan_model","text":"filename saved model","code":""}]
